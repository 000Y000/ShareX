<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="btnAfterUpload.Text" xml:space="preserve">
    <value>Após o upload...</value>
  </data>
  <data name="btnAfterCapture.Text" xml:space="preserve">
    <value>Após a captura...</value>
  </data>
  <data name="btnActionsRemove.Text" xml:space="preserve">
    <value>Remover</value>
  </data>
  <data name="btnActionsEdit.Text" xml:space="preserve">
    <value>Editar</value>
  </data>
  <data name="btnActionsDuplicate.Text" xml:space="preserve">
    <value>Duplicado</value>
  </data>
  <data name="btnActionsAdd.Text" xml:space="preserve">
    <value>Adicionar</value>
  </data>
  <data name="$this.Text" xml:space="preserve">
    <value>ShareX - configurações da tarefa</value>
  </data>
  <data name="btnDestinations.Text" xml:space="preserve">
    <value>Destinos...</value>
  </data>
  <data name="btnEncoderConfig.Text" xml:space="preserve">
    <value>Perfis</value>
  </data>
  <data name="btnImageEffects.Text" xml:space="preserve">
    <value>Configuração de efeitos de imagem...</value>
  </data>
  <data name="btnResetAutoIncrementNumber.Text" xml:space="preserve">
    <value>Redefina o número de auto incremento</value>
  </data>
  <data name="cbCaptureTransparent.Text" xml:space="preserve">
    <value>Janela de captura com transparência</value>
  </data>
  <data name="cbClipboardUploadAutoIndexFolder.Text" xml:space="preserve">
    <value>Se a área de transferência contém um caminho de pasta, em seguida, índice essa pasta e o índice de upload</value>
  </data>
  <data name="cbClipboardUploadShareURL.Text" xml:space="preserve">
    <value>Se a área de transferência contém um URL, em seguida, compartilhá-lo usando o serviço de compartilhamento de URL</value>
  </data>
  <data name="cbClipboardUploadShortenURL.Text" xml:space="preserve">
    <value>Se a área de transferência contém um URL então usar o encurtador de URL</value>
  </data>
  <data name="cbFileUploadUseNamePattern.Text" xml:space="preserve">
    <value>Padrão de nome usar para arquivo uploads de nome de arquivo também em vez disso real</value>
  </data>
  <data name="cbHistorySave.Text" xml:space="preserve">
    <value>Salve informação de tarefa para a história</value>
  </data>
  <data name="cbImageEffectOnlyRegionCapture.Text" xml:space="preserve">
    <value>Só aplica efeitos a captura da região</value>
  </data>
  <data name="cbNameFormatCustomTimeZone.Text" xml:space="preserve">
    <value>Fuso horário personalizado de uso:</value>
  </data>
  <data name="cbPlaySoundAfterCapture.Text" xml:space="preserve">
    <value>Play som após a captura é feita</value>
  </data>
  <data name="cbPlaySoundAfterUpload.Text" xml:space="preserve">
    <value>Play som após tarefa está concluída</value>
  </data>
  <data name="cbScreenRecorderFixedDuration.Text" xml:space="preserve">
    <value>Fixa duração:</value>
  </data>
  <data name="cbScreenshotDelay.Text" xml:space="preserve">
    <value>Atraso screenshot:</value>
  </data>
  <data name="cbShowAfterCaptureTasksForm.Text" xml:space="preserve">
    <value>Mostre janela "Tarefas de captura do Post" após a captura é feita</value>
  </data>
  <data name="cbShowCursor.Text" xml:space="preserve">
    <value>Mostre o cursor em screenshots</value>
  </data>
  <data name="cbThumbnailIfSmaller.Text" xml:space="preserve">
    <value>Crie miniatura somente se o tamanho da imagem é maior que o tamanho da miniatura</value>
  </data>
  <data name="cbUseDefaultAfterCaptureSettings.Text" xml:space="preserve">
    <value>Use o padrão "depois da captura" configurações</value>
  </data>
  <data name="cbUseDefaultAfterUploadSettings.Text" xml:space="preserve">
    <value>Use o padrão "após upload" configurações</value>
  </data>
  <data name="cbUseDefaultDestinationSettings.Text" xml:space="preserve">
    <value>Use predefinições de "Destino"</value>
  </data>
  <data name="chWatchFolderIncludeSubdirectories.Text" xml:space="preserve">
    <value>Inclua subpastas</value>
  </data>
  <data name="btnWatchFolderRemove.Text" xml:space="preserve">
    <value>Remover</value>
  </data>
  <data name="btnScreenRecorderFFmpegOptions.Text" xml:space="preserve">
    <value>FFmpeg opções...</value>
  </data>
  <data name="btnTask.Text" xml:space="preserve">
    <value>Tarefa...</value>
  </data>
  <data name="btnWatchFolderAdd.Text" xml:space="preserve">
    <value>Adicionar...</value>
  </data>
  <data name="cbCaptureAutoHideTaskbar.Text" xml:space="preserve">
    <value>Ao fazer a captura de janela se janela cruza-se com a barra de tarefas depois esconder barra de tarefas</value>
  </data>
  <data name="cbCaptureClientArea.Text" xml:space="preserve">
    <value>Área de cliente de captura quando fazendo janela ou captura de janela ativa</value>
  </data>
  <data name="cbCaptureShadow.Text" xml:space="preserve">
    <value>Capturar janela com sombra (requer transparência)</value>
  </data>
  <data name="cbWatchFolderEnabled.Text" xml:space="preserve">
    <value>Cuidado com pastas e se o novo arquivo criado então enviá-lo</value>
  </data>
  <data name="chActionsArgs.Text" xml:space="preserve">
    <value>Args</value>
  </data>
  <data name="chActionsExtensions.Text" xml:space="preserve">
    <value>Extensões</value>
  </data>
  <data name="chActionsName.Text" xml:space="preserve">
    <value>Nome</value>
  </data>
  <data name="chActionsPath.Text" xml:space="preserve">
    <value>Caminho</value>
  </data>
  <data name="chkClipboardUploadURLContents.Text" xml:space="preserve">
    <value>Se a área de transferência contém um arquivo URL, então faça o download e upload</value>
  </data>
  <data name="chkOverrideCustomUploader.Text" xml:space="preserve">
    <value>Substituir o uploader personalizado padrão:</value>
  </data>
  <data name="chkOverrideFTP.Text" xml:space="preserve">
    <value>Substituir a conta FTP padrão:</value>
  </data>
  <data name="chkRunScreencastCLI.Text" xml:space="preserve">
    <value>Execute CLI depois:</value>
  </data>
  <data name="chkScreenRecordAutoStart.Text" xml:space="preserve">
    <value>Inicie a gravação após:</value>
  </data>
  <data name="chkShowAfterUploadForm.Text" xml:space="preserve">
    <value>Mostrar "após upload" janela após a tarefa é concluída</value>
  </data>
  <data name="chkShowBeforeUploadForm.Text" xml:space="preserve">
    <value>Mostrar "antes de carregar" janela para alterar dinamicamente o destino antes de enviar</value>
  </data>
  <data name="chkShowImageEffectsWindowAfterCapture.Text" xml:space="preserve">
    <value>Mostrar janela de efeitos de imagem após a captura</value>
  </data>
  <data name="chkUseDefaultActions.Text" xml:space="preserve">
    <value>Usar ações em definições de tarefa da janela principal</value>
  </data>
  <data name="chkUseDefaultAdvancedSettings.Text" xml:space="preserve">
    <value>Use as configurações avançadas em configurações de tarefas da janela principal</value>
  </data>
  <data name="chkUseDefaultCaptureSettings.Text" xml:space="preserve">
    <value>Use as configurações de captura em definições de tarefa da janela principal</value>
  </data>
  <data name="chkUseDefaultGeneralSettings.Text" xml:space="preserve">
    <value>Usar configurações gerais em definições de tarefa da janela principal</value>
  </data>
  <data name="chkUseDefaultImageSettings.Text" xml:space="preserve">
    <value>Use as configurações de imagem em definições de tarefa da janela principal</value>
  </data>
  <data name="chkUseDefaultIndexerSettings.Text" xml:space="preserve">
    <value>Usar configurações do indexador em definições de tarefa da janela principal</value>
  </data>
  <data name="chkUseDefaultUploadSettings.Text" xml:space="preserve">
    <value>Usar configurações de upload em definições de tarefa da janela principal</value>
  </data>
  <data name="chWatchFolderFilter.Text" xml:space="preserve">
    <value>Filtro</value>
  </data>
  <data name="chWatchFolderFolderPath.Text" xml:space="preserve">
    <value>Caminho da pasta</value>
  </data>
  <data name="lblAfterTaskNotification.Text" xml:space="preserve">
    <value>Após a tarefa é concluída:</value>
  </data>
  <data name="lblCaptureCustomRegionHeight.Text" xml:space="preserve">
    <value>Altura</value>
  </data>
  <data name="lblCaptureCustomRegionSelectedMonitor.Text" xml:space="preserve">
    <value>Selecione um monitor para uma região personalizada:</value>
  </data>
  <data name="lblCaptureCustomRegionWidth.Text" xml:space="preserve">
    <value>Largura</value>
  </data>
  <data name="lblCaptureShadowOffset.Text" xml:space="preserve">
    <value>Deslocamento da sombra:</value>
  </data>
  <data name="lblDescription.Text" xml:space="preserve">
    <value>Descrição:</value>
  </data>
  <data name="lblGIFFPS.Text" xml:space="preserve">
    <value>GIF FPS:</value>
  </data>
  <data name="lblImageEffectsNote.Text" xml:space="preserve">
    <value>Você pode ativar/desativar efeitos de imagem de "depois da captura de tarefas-&gt; adicionar efeitos de imagem".</value>
  </data>
  <data name="lblImageFileExist.Text" xml:space="preserve">
    <value>Se o arquivo existe:</value>
  </data>
  <data name="lblImageFormat.Text" xml:space="preserve">
    <value>Formato de imagem:</value>
  </data>
  <data name="lblImageFormat2.Text" xml:space="preserve">
    <value>Formato de imagem 2:</value>
  </data>
  <data name="lblImageGIFQuality.Text" xml:space="preserve">
    <value>Qualidade GIF:</value>
  </data>
  <data name="lblImageJPEGQuality.Text" xml:space="preserve">
    <value>Qualidade JPEG:</value>
  </data>
  <data name="lblNameFormatPattern.Text" xml:space="preserve">
    <value>Padrão de nome para upload de captura ou de transferência:</value>
  </data>
  <data name="lblNameFormatPatternActiveWindow.Text" xml:space="preserve">
    <value>Padrão de nome para captura de janela ativa:</value>
  </data>
  <data name="lblNameFormatPatternPreview.Text" xml:space="preserve">
    <value>Visualizar:</value>
  </data>
  <data name="lblNameFormatPatternPreviewActiveWindow.Text" xml:space="preserve">
    <value>Visualizar:</value>
  </data>
  <data name="lblScreenRecorderFixedDuration.Text" xml:space="preserve">
    <value>segundos</value>
  </data>
  <data name="lblScreenRecorderStartDelay.Text" xml:space="preserve">
    <value>segundos</value>
  </data>
  <data name="lblScreenRecordFPS.Text" xml:space="preserve">
    <value>FFmpeg FPS:</value>
  </data>
  <data name="lblScreenshotDelayInfo.Text" xml:space="preserve">
    <value>segundos</value>
  </data>
  <data name="lblThumbnailHeight.Text" xml:space="preserve">
    <value>Altura:</value>
  </data>
  <data name="lblThumbnailName.Text" xml:space="preserve">
    <value>Nome em miniatura:</value>
  </data>
  <data name="lblThumbnailNamePreview.Text" xml:space="preserve">
    <value>Visualizar</value>
  </data>
  <data name="lblThumbnailWidth.Text" xml:space="preserve">
    <value>Largura:</value>
  </data>
  <data name="lblUseImageFormat2After.Text" xml:space="preserve">
    <value>Limite de tamanho de imagem para uso "Formatar imagem 2":</value>
  </data>
  <data name="lblUseImageFormat2AfterHint.Text" xml:space="preserve">
    <value>kB 0 - 5000 (0 desativa)</value>
  </data>
  <data name="tpActions.Text" xml:space="preserve">
    <value>Ações</value>
  </data>
  <data name="tpAdvanced.Text" xml:space="preserve">
    <value>Avançado</value>
  </data>
  <data name="tpCapture.Text" xml:space="preserve">
    <value>Captura</value>
  </data>
  <data name="tpEffects.Text" xml:space="preserve">
    <value>Efeitos</value>
  </data>
  <data name="tpGeneral.Text" xml:space="preserve">
    <value>Geral</value>
  </data>
  <data name="tpImage.Text" xml:space="preserve">
    <value>Imagem</value>
  </data>
  <data name="tpIndexer.Text" xml:space="preserve">
    <value>Indexador</value>
  </data>
  <data name="tpRectangleAnnotate.Text" xml:space="preserve">
    <value>Retângulo anotar</value>
  </data>
  <data name="tpRegionCapture.Text" xml:space="preserve">
    <value>Captura de região</value>
  </data>
  <data name="tpScreenRecorder.Text" xml:space="preserve">
    <value>Gravador de tela</value>
  </data>
  <data name="tpTask.Text" xml:space="preserve">
    <value>Tarefa</value>
  </data>
  <data name="tpThumbnail.Text" xml:space="preserve">
    <value>Miniatura</value>
  </data>
  <data name="tpUpload.Text" xml:space="preserve">
    <value>Fazer upload</value>
  </data>
  <data name="tpUploadClipboard.Text" xml:space="preserve">
    <value>Upload de transferência</value>
  </data>
  <data name="tpWatchFolders.Text" xml:space="preserve">
    <value>Pastas de relógio</value>
  </data>
  <data name="tsmiFileUploaders.Text" xml:space="preserve">
    <value>Upload de arquivo</value>
  </data>
  <data name="tsmiImageUploaders.Text" xml:space="preserve">
    <value>Uploaders de imagem</value>
  </data>
  <data name="tsmiTextUploaders.Text" xml:space="preserve">
    <value>Uploaders de texto</value>
  </data>
  <data name="tsmiURLSharingServices.Text" xml:space="preserve">
    <value>Serviços de compartilhamento de URL</value>
  </data>
  <data name="tsmiURLShorteners.Text" xml:space="preserve">
    <value>Shorteners URL</value>
  </data>
</root>