<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="btnActionsAdd.Text" xml:space="preserve">
    <value>Adicionar</value>
  </data>
  <data name="btnActionsDuplicate.Text" xml:space="preserve">
    <value>Duplicar</value>
  </data>
  <data name="btnActionsEdit.Text" xml:space="preserve">
    <value>Editar</value>
  </data>
  <data name="btnActionsRemove.Text" xml:space="preserve">
    <value>Remover</value>
  </data>
  <data name="btnAfterCapture.Text" xml:space="preserve">
    <value>Após captura...</value>
  </data>
  <data name="btnAfterUpload.Text" xml:space="preserve">
    <value>Após upload...</value>
  </data>
  <data name="btnDestinations.Text" xml:space="preserve">
    <value>Destinos...</value>
  </data>
  <data name="btnEncoderConfig.Text" xml:space="preserve">
    <value>Perfis...</value>
  </data>
  <data name="btnImageEffects.Text" xml:space="preserve">
    <value>Configuração de efeitos de imagem...</value>
  </data>
  <data name="btnScreenRecorderFFmpegOptions.Text" xml:space="preserve">
    <value>Opções para gravação de tela...</value>
  </data>
  <data name="btnTask.Text" xml:space="preserve">
    <value>Tarefa...</value>
  </data>
  <data name="btnWatchFolderAdd.Text" xml:space="preserve">
    <value>Adicionar...</value>
  </data>
  <data name="btnWatchFolderRemove.Text" xml:space="preserve">
    <value>Remover...</value>
  </data>
  <data name="cbHistorySave.Text" xml:space="preserve">
    <value>Salvar informações da tarefa no histórico</value>
  </data>
  <data name="chkOverrideFTP.Text" xml:space="preserve">
    <value>Sobrescrever conta FTP padrão:</value>
  </data>
  <data name="chActionsName.Text" xml:space="preserve">
    <value>Nome</value>
  </data>
  <data name="chWatchFolderFilter.Text" xml:space="preserve">
    <value>Filtrar</value>
  </data>
  <data name="chWatchFolderIncludeSubdirectories.Text" xml:space="preserve">
    <value>Incluir subdiretórios</value>
  </data>
  <data name="tpImage.Text" xml:space="preserve">
    <value>Imagem</value>
  </data>
  <data name="tpEffects.Text" xml:space="preserve">
    <value>Efeitos</value>
  </data>
  <data name="tpCapture.Text" xml:space="preserve">
    <value>Capturar</value>
  </data>
  <data name="tpAdvanced.Text" xml:space="preserve">
    <value>Avançado</value>
  </data>
  <data name="tpActions.Text" xml:space="preserve">
    <value>Ações</value>
  </data>
  <data name="tpUpload.Text" xml:space="preserve">
    <value>Upload</value>
  </data>
  <data name="tpUploadClipboard.Text" xml:space="preserve">
    <value>Upload da área de transferência</value>
  </data>
  <data name="tpTask.Text" xml:space="preserve">
    <value>Tarefa</value>
  </data>
  <data name="tpRegionCapture.Text" xml:space="preserve">
    <value>Região de captura</value>
  </data>
  <data name="tsmiURLShorteners.Text" xml:space="preserve">
    <value>Encurtadores de URL</value>
  </data>
  <data name="lblNameFormatPatternPreview.Text" xml:space="preserve">
    <value>Pré-visualização:</value>
  </data>
  <data name="lblNameFormatPatternPreviewActiveWindow.Text" xml:space="preserve">
    <value>Pré-visualização:</value>
  </data>
  <data name="lblImageGIFQuality.Text" xml:space="preserve">
    <value>Qualidade do GIF:</value>
  </data>
  <data name="lblImageJPEGQuality.Text" xml:space="preserve">
    <value>Qualidade do JPEG:</value>
  </data>
  <data name="lblImageFileExist.Text" xml:space="preserve">
    <value>Se arquivo existe:</value>
  </data>
  <data name="$this.Text" xml:space="preserve">
    <value>ShareX - Configurações de tarefas</value>
  </data>
  <data name="lblGIFFPS.Text" xml:space="preserve">
    <value>FPS do GIF:</value>
  </data>
  <data name="lblImageFormat.Text" xml:space="preserve">
    <value>Formato da imagem:</value>
  </data>
  <data name="lblScreenRecorderFixedDuration.Text" xml:space="preserve">
    <value>segundos</value>
  </data>
  <data name="lblScreenRecorderStartDelay.Text" xml:space="preserve">
    <value>segundos</value>
  </data>
  <data name="lblScreenshotDelayInfo.Text" xml:space="preserve">
    <value>segundos</value>
  </data>
  <data name="lblThumbnailNamePreview.Text" xml:space="preserve">
    <value>Pré-visualização</value>
  </data>
  <data name="lblUseImageFormat2AfterHint.Text" xml:space="preserve">
    <value>kB 0 - 5000 (0 desativa)</value>
  </data>
  <data name="cbShowCursor.Text" xml:space="preserve">
    <value>Mostrar cursor nas screenshots</value>
  </data>
  <data name="cbUseDefaultAfterCaptureSettings.Text" xml:space="preserve">
    <value>Usar configurações padrões de "Após captura"</value>
  </data>
  <data name="cbUseDefaultAfterUploadSettings.Text" xml:space="preserve">
    <value>Usar configurações padrões de "Após upload"</value>
  </data>
  <data name="cbUseDefaultDestinationSettings.Text" xml:space="preserve">
    <value>Usar configurações padrões de "Destino"</value>
  </data>
  <data name="lblAfterTaskNotification.Text" xml:space="preserve">
    <value>Após a tarefa estar completa:</value>
  </data>
  <data name="lblCaptureCustomRegionSelectedMonitor.Text" xml:space="preserve">
    <value>Selecione um monitor para uma região customizada:</value>
  </data>
  <data name="lblDescription.Text" xml:space="preserve">
    <value>Descrição:</value>
  </data>
  <data name="cbPlaySoundAfterCapture.Text" xml:space="preserve">
    <value>Tocar som após captura</value>
  </data>
  <data name="cbPlaySoundAfterUpload.Text" xml:space="preserve">
    <value>Tocar som após concluir tarefa</value>
  </data>
</root>